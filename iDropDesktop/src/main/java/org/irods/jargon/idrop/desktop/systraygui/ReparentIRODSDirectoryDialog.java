/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReparentIRODSDirectoryDialog.java
 *
 * Created on Sep 3, 2010, 9:52:12 AM
 */
package org.irods.jargon.idrop.desktop.systraygui;

import java.awt.Cursor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.TreePath;
import org.irods.jargon.idrop.desktop.systraygui.services.IRODSFileService;
import org.irods.jargon.idrop.desktop.systraygui.viscomponents.IRODSNode;
import org.irods.jargon.idrop.desktop.systraygui.viscomponents.IRODSTree;
import org.irods.jargon.idrop.exceptions.IdropException;
import org.slf4j.LoggerFactory;

/**
 * Dialog to confirm and process reparenting of an IRODS directory
 * @author mikeconway
 */
public class ReparentIRODSDirectoryDialog extends javax.swing.JDialog {

    private final iDrop idrop;
    private final IRODSTree stagingViewTree;
    private final IRODSNode targetNode;
    private final String targetAbsolutePath;
    private final String sourceAbsolutePath;
    public static org.slf4j.Logger log = LoggerFactory.getLogger(ReparentIRODSDirectoryDialog.class);

    /** Creates new form NewDirectoryDialog */
    public ReparentIRODSDirectoryDialog(final iDrop parent, final boolean modal, final IRODSNode targetNode, final IRODSTree stagingViewTree, final String sourceAbsolutePath, final String targetAbsolutePath) {
        super(parent, modal);
        this.idrop = parent;
        this.targetNode = targetNode;
        this.stagingViewTree = stagingViewTree;
        this.targetAbsolutePath = targetAbsolutePath;
        this.sourceAbsolutePath = sourceAbsolutePath;

        initComponents();
        txtCurrentName.setText(sourceAbsolutePath);
        txtNewFolder.setText(targetAbsolutePath);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        pnlFolderData = new javax.swing.JPanel();
        pnlCurrentParent = new javax.swing.JPanel();
        lblCurrentParent = new java.awt.Label();
        scrollCurrentName = new javax.swing.JScrollPane();
        txtCurrentName = new javax.swing.JTextArea();
        lblNewDiretoryName = new java.awt.Label();
        scrollNewFolder = new javax.swing.JScrollPane();
        txtNewFolder = new javax.swing.JTextArea();
        pnlBottom = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Move an iRODS File or Folder Dialog");
        setName("NewParentDialog"); // NOI18N

        lblTitle.setText("Confirm a move of an iRODS file or collection");

        lblCurrentParent.setText("Current Name:");

        txtCurrentName.setColumns(20);
        txtCurrentName.setEditable(false);
        txtCurrentName.setLineWrap(true);
        txtCurrentName.setRows(5);
        txtCurrentName.setFocusable(false);
        scrollCurrentName.setViewportView(txtCurrentName);

        lblNewDiretoryName.setText("New Name:");

        txtNewFolder.setColumns(20);
        txtNewFolder.setEditable(false);
        txtNewFolder.setLineWrap(true);
        txtNewFolder.setRows(5);
        txtNewFolder.setFocusable(false);
        scrollNewFolder.setViewportView(txtNewFolder);

        org.jdesktop.layout.GroupLayout pnlCurrentParentLayout = new org.jdesktop.layout.GroupLayout(pnlCurrentParent);
        pnlCurrentParent.setLayout(pnlCurrentParentLayout);
        pnlCurrentParentLayout.setHorizontalGroup(
            pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlCurrentParentLayout.createSequentialGroup()
                .add(66, 66, 66)
                .add(pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(lblCurrentParent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblNewDiretoryName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(scrollNewFolder, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                    .add(scrollCurrentName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCurrentParentLayout.setVerticalGroup(
            pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlCurrentParentLayout.createSequentialGroup()
                .add(30, 30, 30)
                .add(pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(scrollCurrentName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblCurrentParent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(pnlCurrentParentLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(scrollNewFolder, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblNewDiretoryName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(66, 66, 66))
        );

        lblNewDiretoryName.getAccessibleContext().setAccessibleName("New directory name:");

        org.jdesktop.layout.GroupLayout pnlFolderDataLayout = new org.jdesktop.layout.GroupLayout(pnlFolderData);
        pnlFolderData.setLayout(pnlFolderDataLayout);
        pnlFolderDataLayout.setHorizontalGroup(
            pnlFolderDataLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFolderDataLayout.createSequentialGroup()
                .add(pnlCurrentParent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFolderDataLayout.setVerticalGroup(
            pnlFolderDataLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFolderDataLayout.createSequentialGroup()
                .add(pnlCurrentParent, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlBottomLayout = new org.jdesktop.layout.GroupLayout(pnlBottom);
        pnlBottom.setLayout(pnlBottomLayout);
        pnlBottomLayout.setHorizontalGroup(
            pnlBottomLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlBottomLayout.createSequentialGroup()
                .add(451, 451, 451)
                .add(btnCancel)
                .add(5, 5, 5)
                .add(btnOK))
        );
        pnlBottomLayout.setVerticalGroup(
            pnlBottomLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlBottomLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(btnCancel))
            .add(pnlBottomLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(btnOK))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(lblTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 622, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(pnlBottom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 622, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(pnlFolderData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblTitle)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlFolderData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(pnlBottom, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
}//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // add the new folder to irods, add to the tree, and scroll the tree into view

        final ReparentIRODSDirectoryDialog thisDialog = this;

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    log.info("procssing move in iRODS tree");
                    thisDialog.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                    IRODSFileService irodsFileService = new IRODSFileService(idrop.getIrodsAccount());
                    log.info("processing the rename");
                    irodsFileService.moveCollectionUnderneathNewParent(sourceAbsolutePath, targetAbsolutePath);
                    log.debug("rename done");
                    //TreePath pathForSource = TreeUtils.buildTreePathForIrodsAbsolutePath(stagingViewTree, sourceAbsolutePath);
                    //log.debug("computed path for source:{}", pathForSource);
                    //IRODSFileSystemModelOld irodsFileSystemModel = (IRODSFileSystemModelOld) stagingViewTree.getModel();

                    // TODO: manage tree updates, for now, just nuke the tree
                    log.debug("reloading target tree....nuke for now");
                    idrop.buildTargetTree();
                    TreePath scrollToPath = new TreePath(targetNode.getPath());

                    stagingViewTree.scrollPathToVisible(scrollToPath);
                    idrop.showMessageFromOperation("irods move processed");
                    thisDialog.dispose();
                }
                catch (IdropException ex) {
                    Logger.getLogger(IRODSTree.class.getName()).log(Level.SEVERE, null, ex);
                    idrop.showIdropException(ex);
                    return;
                }
                finally {
                    thisDialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                }
            }
        });
    }//GEN-LAST:event_btnOKActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private java.awt.Label lblCurrentParent;
    private java.awt.Label lblNewDiretoryName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlBottom;
    private javax.swing.JPanel pnlCurrentParent;
    private javax.swing.JPanel pnlFolderData;
    private javax.swing.JScrollPane scrollCurrentName;
    private javax.swing.JScrollPane scrollNewFolder;
    private javax.swing.JTextArea txtCurrentName;
    private javax.swing.JTextArea txtNewFolder;
    // End of variables declaration//GEN-END:variables
}
