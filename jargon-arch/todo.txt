main color hex val = 72B42D

ROLES:


role - archive_appl_admin - highest level configs the archival apps
role - rule_admin - sets up rule mappings and can set up rule mapping dir
role - policy_admin - sets up policies and policy dirs
role - series_admin - sets up series and binds policy/parms
role - archivist - ingest into permitted series

todo
-----

 * strange error on login with j_security_check...rewrite rule?
 
 * add policy when no policy repo
 * handle -818000 permission errors with better error message
 
 
 - show series table (build view and test)
 - add series
 	-bind to app, select policy
 
 
 >>>> move over to gui and view the series
 
 
 
- list rules in rule mapping dir
- add rule by upload of mapping
- fix bad url response, add link back to home
-rules processing
-query requery and paging in required methods
-browsing tree for collection selection, etc

use cases
---------

-appl_admin views apps that are set up and sets up a new application
	-discovers rule and policy mappings and adds to application
	
-series_admin selects archive and selects to set up a series
 	-discovers and binds a policy
 	
 	
maybes
------
-point to irods via config

 	
 	





















=================
parking lot
=================

<!--  TODO: this is a test of creating an account via spring config -->
	<bean id="adminProxyAccount" class="org.irods.jargon.core.connection.IRODSAccount" factory-method="instance">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="1247"/>
		<constructor-arg index="2" value="test1"/>
		<constructor-arg index="3" value="test"/>
		<constructor-arg index="4" value="/test1/home/test1"/>
		<constructor-arg index="5" value="test1"/>
		<constructor-arg index="6" value="test1-resc"/>
	</bean>
	
	
	
	
	
	
	
	
	
	
	
function loadArchivalApps() {
	sendValueAndPlugHtmlInDiv(context + "/ruleadmin/ruledir/ajax_service_options", "#listComboArea", context);
}
	