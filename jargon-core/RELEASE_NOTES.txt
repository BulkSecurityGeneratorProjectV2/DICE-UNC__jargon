
*'''Project''': Jargon-core - IRODS Java API
*'''Date''': 10/1/2011
*'''Release Version''': 3.0.1 work in progress
*'''git tag''': xxxx

==News==

Jargon-core implements the iRODS protocol, and allows development of iRODS-enabled Java applications.  This API is especially useful for developing
mid-tier applications and services, as well as desktop-clients (such as iDROP).  These libraries also provide a foundation for a new set of interfaces that will come with iRODS.

Note that this release supports iRODS built-in authorization.  Adding GSI and general GSS support (including Kerberos) will come in a follow-on release planned shortly.

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS

Other libraries are planned, such as connection pooling, as well as administrative functions.

==Requirements==

-Jargon depends on Java 1.6+
-Jargon is built using Apache Maven2, see POM for dependencies

==Libraries==


Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]


==Bug Fixes==

[#494] looses localIRODSTransfer data on final update
[#496] BAD_INPUT_DESC_INDEX errors are being sent to irods client
[#502] bug in synch
[#519] tolerate quote in data name for acl query
[#547] error running old style rule via irods file
[#548] user list all not ordered
[#546] handle setting blank comment on data or collection, causing delete of comment AVU data


==Features==

[#483] pool to share single conn - initial implementation of commons-pool to share a single connection from multiple threads
[#499] add thumbnail generation facility to Jargon data utls
[#500] enhanced 3.0 rule parsing and load rule from resource
[#515] add irods file factory support for uri file create without user info
[#114] support for mounted collections, cross zone browsing, and soft links
 	* Added support for obj stat, initial ObjStat domain object [work in progress]
 	* Added cross zone query capability and tests
[#533] consolidate and simplfy move methods in DataTransferOperations
[#536] User group CRUD functionality and tests
[#535] shopping cart capability in idrop web and idrop lite
	*Added package to data utils for shopping cart maintenance, serialization, de-serialization


 
 ---------------------
 notepad - ignore and clear from notes at release
 ---------------------
 
 
 
 bug in get cross zone:
 
 288760 [main] INFO  org.irods.jargon.core.pub.IRODSGenQueryExecutorImpl  - rows returned from iRODS for GenQuery: 1
298850 [main] INFO  org.irods.jargon.core.pub.DataObjectAOImpl  - testing file length to set parallel transfer options
306090 [main] INFO  org.irods.jargon.core.pub.DataObjectAOImpl  - target local file: /Users/mikeconway/temp/irodsscratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZoneReturnedLocalFiles/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone0.txt
306490 [main] INFO  org.irods.jargon.core.pub.DataObjectAOImpl  - from source file: /fedzone2/home/test1/fedwrite/jargon-scratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone0.txt
418999 [main] INFO  org.irods.jargon.core.pub.DataObjectAOImpl  - process get after resource determined
420815 [main] INFO  org.irods.jargon.core.pub.DataObjectAOImpl  - no transfer status callback listener provided
423895 [main] INFO  org.irods.jargon.core.utils.LocalFileUtils  - local file does not exist, will attempt to create local file: /Users/mikeconway/temp/irodsscratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZoneReturnedLocalFiles/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone0.txt
425033 [main] DEBUG org.irods.jargon.core.connection.IRODSSession  - session using previously established connection:org.irods.jargon.core.connection.IRODSCommands@21bbd3e2
429354 [main] INFO  org.irods.jargon.core.connection.IRODSCommands  - calling irods function with byte array
429354 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - calling irods function with:

<DataObjInp_PI>
<objPath>/fedzone2/home/test1/fedwrite/jargon-scratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone0.txt</objPath>
<createMode>0</createMode>
<openFlags>0</openFlags>
<offset>0</offset>
<dataSize>1</dataSize>
<numThreads>0</numThreads>
<oprType>2</oprType>
<KeyValPair_PI><ssLen>0</ssLen>
</KeyValPair_PI>
</DataObjInp_PI>
=== icommand ->
<DataObjInp_PI>
<objPath>/fedzone2/home/test1/fedwrite/jargon-scratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone1.txt</objPath>
<createMode>0</createMode>
<openFlags>0</openFlags>
<offset>0</offset>
<dataSize>1</dataSize>
<numThreads>0</numThreads>
<oprType>2</oprType>
<KeyValPair_PI>
<ssLen>0</ssLen>
</KeyValPair_PI>
</DataObjInp_PI>



429355 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - api number is:608
429355 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - functionID: 608
429357 [main] INFO  org.irods.jargon.core.connection.IRODSCommands  - reading message from irods
429357 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - IRODSConnection.read, byte array size =  4
429357 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - offset = 0
429358 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - length = 4
432169 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - IRODSConnection.read, byte array size =  143
432169 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - offset = 0
432170 [main] DEBUG org.irods.jargon.core.connection.IRODSConnection  - length = 143
432172 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - message length:0
432172 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - error length:0
432172 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - bytesLength:0
432172 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - info value:-9000
432172 [main] DEBUG org.irods.jargon.core.connection.IRODSCommands  - info is < 0


sending msg: 
<DataObjInp_PI>
<objPath>/fedzone2/home/test1/fedwrite/jargon-scratch/FederatedDataTransferOperationsImplTest/testGetCollectionWithTwoFilesInAnotherZone/testGetCollectionWithTwoFilesInAnotherZonelvl1nbr0/testGetCollectionWithTwoFilesInAnotherZone1.txt</objPath>
<createMode>0</createMode>
<openFlags>0</openFlags>
<offset>0</offset>
<dataSize>1</dataSize>
<numThreads>0</numThreads>
<oprType>2</oprType>
<KeyValPair_PI>
<ssLen>0</ssLen>
</KeyValPair_PI>
</DataObjInp_PI>

received header: len = 143
<MsgHeader_PI>
<type>RODS_API_REPLY</type>
<msgLen>0</msgLen>
<errorLen>0</errorLen>
<bsLen>0</bsLen>
<intInfo>-9000</intInfo>
</MsgHeader_PI>
?
DEBUG: procApiRequest: readAndProcApiReply failed. status = -9000 status = -9000 SYS_EXCEED_CONNECT_CNT
ERROR: getUtil: get error for ./testGetCollectionWithTwoFilesInAnotherZone1.txt status = -9000 SYS_EXCEED_CONNECT_CNT
packed XML: 
<MsgHeader_PI>
<type>RODS_DISCONNECT</type>
<msgLen>0</msgLen>
<errorLen>0</errorLen>









Nov 29 06:31:53 pid:1442 NOTICE: Agent process 7471 started for puser=test1 and cuser=test1 from 192.168.56.20
Nov 29 06:31:53 pid:7471 NOTICE: Warning, cannot authenticate remote server, serverResponse field is empty
Nov 29 06:31:53 pid:7471 NOTICE: rsAuthResponse set proxy authFlag to 4, client authFlag to 4, user:test1#test1 proxy:test1 client:test1
Nov 29 06:31:54 pid:1442 NOTICE: Agent process 7473 started for puser=test1 and cuser=test1 from 192.168.56.20
Nov 29 06:31:54 pid:7473 ERROR: connectToRhost: error returned from host fedzone1 status = -9000 status = -9000 SYS_EXCEED_CONNECT_CNT
Nov 29 06:31:54 pid:7473 ERROR: It is likely fedzone1 is a localhost but not recognized by this server. A line can be added to the server/config/irodsHost file to fix the problem
Nov 29 06:31:54 pid:7473 ERROR: _rcConnect: connectToRhost error, server on fedzone1 is probably down status = -9000 SYS_EXCEED_CONNECT_CNT
:


