*'''Project''': Jargon-core API
*'''Date''': xx/xx/xxxx
*'''Release Version''': 960-user-profile
*'''git tag''': xxxxxx

==News==

Work in progress on user profile management: https://code.renci.org/gf/project/irodsidrop/tracker/?action=TrackerItemEdit&tracker_item_id=922&start=50

==News==

NOTE: This RELEASE represents the first set of updates for mounted collections and soft link support.  Currently, this includes
soft link support and accompanying unit tests.  Mounted collection and MSO support will be included in follow-on releases.  


Jargon-core implements the iRODS protocol, and allows development of iRODS-enabled Java applications.  This API is especially useful for developing
mid-tier applications and services, as well as desktop-clients (such as iDROP).  These libraries also provide a foundation for a new set of interfaces that will come with iRODS.

Note that this release supports iRODS built-in authorization.  Adding GSI and general GSS support (including Kerberos) will come in a follow-on release planned shortly.

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS
* jargon-ticket - support for ticket processing
* jargon-httpstream - stream http content into iRODS via Jargon

Other libraries are planned, such as connection pooling, as well as administrative functions.

==Requirements==

*Jargon depends on Java 1.6+
*Jargon is built using Apache Maven2, see POM for dependencies
*Jargon supports iRODS 2.4 through iRODS 3.0, and is tested with the current (as of release time) development version of iRODS

==Libraries==

Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]

==Bug Fixes==

* [#930] [iROD-Chat:8451] Does Jargon limit the number of items returned in a collection contents list?
** Correctly compute last index when listing collections with permissions
** Take out user type query and set to unknown to help performance.  This was causing a subquery for every row.  The user type defaults to UNKNOWN for now, and that information will not be available in the current iteration.  Note that specific/sql query will be used to impove the available information in this query as a separate feature request.
** fix record counts in gen query results to account for paging offset when adding counts to returned rows
** added IRODSThousandCollectionsTest and augmented IRODSThousandFilesTest to test out this operation

==Features==

 * [#764] Java libraries and code to integrate idrop-web
 ** added isUserInGroup method to UserGroupAO
 
 
 * [#891] UserGroupAO add better remove method
 
 * [#906] supress error messages for acls when anonymous in list and search operations
 This change helps handle occasions where strict ACL's are on, and/or operations are being done as an anonymous user.  This change, adjusted by the default.to.public.if.nothing.under.root.when.listing
 jargon property, will allow users without ACL list permissions to be able to drill down into /zone/home/ and look for a 'public' dir and their user dir, they would need to 
 have list permissions to actually list files in these places, it essentially emulates being able to list into these paths.
 
 *  [#927] 3.1.3 final release activities
 ** update pom's in project for spring/hibernate versions, get rid of some nag messages about plug-in versions, general pom clean up for maven
 
 * [#922] User Profile Management
 ** added jargon-user-profile subproject to manage user profile information in a consistent way
 ** added an org.irods.jargon.core.service package to jargon-core as a common basis for Jargon services
 ** added updateUserInfo() to UserAO
