
*'''Project''': Jargon-core - IRODS Java API
*'''Date''': 3/20/2012
*'''Release Version''': 3.1.1
*'''git tag''': 3.1.1

==News==

This is a maintenance release of Jargon-core to coincide with the first release of the idrop-web suite.  This is a recommended release for all versions of iRODS server.

Jargon-core implements the iRODS protocol, and allows development of iRODS-enabled Java applications.  This API is especially useful for developing
mid-tier applications and services, as well as desktop-clients (such as iDROP).  These libraries also provide a foundation for a new set of interfaces that will come with iRODS.

Note that this release supports iRODS built-in authorization.  Adding GSI and general GSS support (including Kerberos) will come in a follow-on release planned shortly.

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS
* jargon-ticket - support for ticket processing
* jargon-httpstream - stream http content into iRODS via Jargon

Other libraries are planned, such as connection pooling, as well as administrative functions.

==Requirements==

*Jargon depends on Java 1.6+
*Jargon is built using Apache Maven2, see POM for dependencies
*Jargon supports iRODS 2.4 through iRODS 3.0, and is tested with the current (as of release time) development version of iRODS

==Libraries==


Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]


==Bug Fixes==

* [#662] mod avu when setting a present units value to blank does not work - submitted as iRODS bug, added JUnit tests, will be resolved on iRODS server side in iRODS3.2
* [#677] strip quotes, commas from tags - user free tagging with quotes can cause pathological query behavior, standardize on space delimited, also parse out commas
* [#697] IRODSFileOutputStream overwrite fix - handle overwrites to match behavior of java io FileOutputStream (replace bytes)
* [#700] cdr errors multiple FITS processes writing to irods (added unit tests for multiple concurrent output stream writes..work in progress)

==Features==

 * [#664] parallel txfr optimization, including optional parallel via NIO
 * [#692] add ability to make parent dirs when creating a file for an IRODSFileOutputStream
 * [#114] support for mounted collections, cross zone browsing, and soft links
 ** Added tests and support for ACL operations across federated zones to support idrop interface operations
 *  [#714] add support for extended permissions set
 ** added extended permission types to FilePermissionEnum (work in progress - add support for files/collection acl setting)
 * [#723] add ireg support in jargon via IRODSRegistrationOfFilesAO
 * [#5] GenQuery Enhancements
 ** adding a new query builder model for more efficient and expressive gen query statements (work in progress)
 