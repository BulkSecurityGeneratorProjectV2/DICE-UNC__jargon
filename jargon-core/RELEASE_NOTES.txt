*'''Project''': Jargon-core API
*'''Date''': 10/10/2012
*'''Release Version''': 3.2.2-SNAPSHOT for GSI 
*'''git tag''': origin/gss

==News==

Work in progress for iRODS 3.2.1 release including support for globus GSI auth per  [#132] GSS and Kerberos Support in Jargon-core

https://code.renci.org/gf/project/jargon/tracker/?action=TrackerItemEdit&tracker_item_id=132&start=0


Jargon-core implements the iRODS protocol, and allows development of iRODS-enabled Java applications.  This API is especially useful for developing
mid-tier applications and services, as well as desktop-clients (such as iDROP).  These libraries also provide a foundation for a new set of interfaces that will come with iRODS.

Note that this release supports iRODS built-in authorization.  Adding GSI and general GSS support (including Kerberos) will come in a follow-on release planned shortly.

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS
* jargon-ticket - support for ticket processing
* jargon-httpstream - stream http content into iRODS via Jargon

Other libraries are planned, such as connection pooling, as well as administrative functions.

==Requirements==

*Jargon depends on Java 1.6+
*Jargon is built using Apache Maven2, see POM for dependencies

*Jargon supports iRODS 2.5 through iRODS 3.2

==Libraries==

Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]

==Bug Fixes==

* [#1044] Jargon allows the creating of folders that exceed the USER_PATH_EXCEEDS_MAX and cannot delete them
** work in progress

*[#1044] Jargon allows the creating of folders that exceed the USER_PATH_EXCEEDS_MAX and cannot delete them
**Added a new PathTooLongException and methods to check path lengths in MiscIRODSUtils, used these checks in the various path methods, especially
the IRODSFile and DataObject and Collection access objects

==Features==


 *[#132] GSS and Kerberos Support in Jargon-core
 ** added GSI to authentication methods
  ** merge in plug-able authentication refactoring
 
 *[#870] jargon support for PAM

 ** Support for PAM authentication (per Chris Smith's updates to iRODS) as a pluggable auth module in Jargon
 ** [#992] don't let public irods account trigger auth other then standard
 
 *[#974] anonymous link support
 ** added isUserHasPermission methods for collections and data objects that indicate that a user has at least read permission on a file or data object
 ** added AnonymousAccessService in data utils to help manage permissions for the anonymous user
 
 *[#1011] add a dedicated doAuthentication method ot irodsAccessObjectFactory

* [#1046] Add total row count to gen query out
** When creating gen queries from the IRODSGenQueryBuilder, one may now specify that total row counts (reflecting the total results in the database) be requested from iRODS.  This row
count will be provided in the IRODSQueryResultSet object when using the general query executor service.

thisisapassword!:test
