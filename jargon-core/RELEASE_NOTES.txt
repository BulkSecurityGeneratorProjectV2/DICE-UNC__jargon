
*'''Project''': <<<<<<< HEAD
*'''Date''': X/X/X
*'''Release Version''': 3.1.3-beta1
*'''git tag''': 3.1.3 TBD

==News==

NOTE: This BETA represents the first set of updates for mounted collections and soft link support.  Currently, this includes a beta version of 
soft link support and accompanying unit tests.  Mounted collection and MSO support will be included with incremental commits to 3.1.3-SNAPSHOT.  This
beta release marks the first integration testing period with the iDrop suite of tools.

Jargon-core implements the iRODS protocol, and allows development of iRODS-enabled Java applications.  This API is especially useful for developing
mid-tier applications and services, as well as desktop-clients (such as iDROP).  These libraries also provide a foundation for a new set of interfaces that will come with iRODS.

Note that this release supports iRODS built-in authorization.  Adding GSI and general GSS support (including Kerberos) will come in a follow-on release planned shortly.

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS
* jargon-ticket - support for ticket processing
* jargon-httpstream - stream http content into iRODS via Jargon

Other libraries are planned, such as connection pooling, as well as administrative functions.

==Requirements==

*Jargon depends on Java 1.6+
*Jargon is built using Apache Maven2, see POM for dependencies
*Jargon supports iRODS 2.4 through iRODS 3.0, and is tested with the current (as of release time) development version of iRODS

==Libraries==

Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]

==Bug Fixes==

* [#872] numeric gen query with datasize gives errors in condition

==Features==

 * [#775] iDrop 1.1.0 refactoring activities
 ** clean up deprecated methods and fix visibility so DataTransferOperations is the public API for put/get/copy/move
 
 * [#114] support for mounted collections, cross zone browsing, and soft links
 ** significant refactoring as support added, cleanup of deprecated methods, tightening package visibility
 ** added a MountedCollectionAO to administer mounted collections and soft links 
 ** Refactoring of key classes for support
 **** CollectionAndDataObjectListAndSearchAO
 **** DataObjectAO
 **** DataTransferOperations
 **** CollectionAO
 **** IRODSFile
 **** IRODSInputStream
 **** IRODSOutputStream
 
 *  [#696] Add ticket support
 ** added compareGivenTicketToActualAndUpdateAsNeeded() method to TicketAdminService, which allows for updating an entire ticket, computing deltas and updating fields as appropriate
 ** added support to stream data via an output stream to an iRODS collection with a ticket
 
 *  [#853] IP - add ticket by admin
 ** added ability to create a ticket for another user (given that the creator is rodsAdmin)

 * [#864] 2.5 iRODS protocol errors
 ** update tests for 2.5 backwards compatability
 ** overhead misc operations to normalize errors (especially DuplicateDataException and DataNotFoundException) which are indicated
 by different iRODS error codes in 2.5 and prior.
 
 
 * [#865] factor helper classes into jargon core and remove
 ** this is a general project cleanup and simplification task.  THe testing libraries have been consolidated and placed
 into the jargon-core so that they me used by unit tests in jargon itself, as well as other projects.  This removes jargon-test as a project.
 
 * [#866] Resource Group support
 ** initial support for resource group admin and listing
 
 *  [#869] connection restart in transfer
 ** added reconnet to PipelineConfiguration and JargnProperties and added to StartupPack processing
 
 * [#878] pipeline and transfer optimization round - 3.1.3
 ** added instrument opton to PipelineConfiguration and JargonProperties to route detailed instrumentation to the DEBUG log
 
 
 * [#764] Java libraries and code to integrate idrop-web
 ** added isUserInGroup method to UserGroupAO
 
 
 * [#891] UserGroupAO add better remove method
 
 * [#906] supress error messages for acls when anonymous in list and search operations
 This change helps handle occasions where strict ACL's are on, and/or operations are being done as an anonymous user.  This change, adjusted by the default.to.public.if.nothing.under.root.when.listing
 jargon property, will allow users without ACL list permissions to be able to drill down into /zone/home/ and look for a 'public' dir and their user dir, they would need to 
 have list permissions to actually list files in these places, it essentially emulates being able to list into these paths.
 
 
 
 
 
 
 
 Notes:  
 
 -add reconn flag to startup pack in connection - see lib/core/src/sockComm.c  sendStartupPack()
 
