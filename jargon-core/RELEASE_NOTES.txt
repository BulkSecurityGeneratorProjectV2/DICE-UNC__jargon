*'''Project''': Jargon-core API
*'''Date''': 02/27/2013
*'''Release Version''': 3.3.0
*'''git tag''': 3.3.0

==News==

Jargon 3.3.0 feature development.  This accompanies a release of iDrop version 2.0.0

==News==

Feature release of Jargon

Note that this API represents a fundamental shift, and is meant to make development of applications easier and faster.

=======
Please go to [[https://code.renci.org/gf/project/jargon/]] for the latest news and info.

Jargon-core consists of the following libraries

* jargon-core - base libraries, implementation of the iRODS protocol
* jargon-data-utils - additional functionality for dealing with iRODS data, such as building trees, storing information in iRODS on behalf of applications, and doing diffs between local and iRODS
* jargon-security - code for use with Spring security
* jargon-user-tagging - code for using free tagging and other metadata metaphors on top of iRODS
* jargon-transfer - transfer manager for managing and synchronizing data with iRODS
* jargon-ticket - support for ticket processing
* jargon-httpstream - stream http content into iRODS via Jargon


==Requirements==

*Jargon depends on Java 1.6+
*Jargon is built using Apache Maven2, see POM for dependencies
*Jargon supports iRODS 2.5 through iRODS 3.2

==Libraries==

Jargon-core uses Maven for dependency management.  See the pom.xml file for references to various dependencies.

Note that the following bug and feature requests are logged in GForge with related commit information [[https://code.renci.org/gf/project/jargon/tracker/]]

==Bug Fixes==
 
 *[#1177] thumbnail support for soft linked photos
 **added soft link path resolution to thumbnail service in jargon-data-utils
 
 *[#1205] error accessing tickets (-80600) on srbbrick15
 **Added CatalogSQLException handling in error scanner to better trap this error as a specific Jargon exception
 
 *[#956] error logging in with guest account, attempts to create profile
 **Added code to not show profile tab when a guest account, and to better handle profile errors
 
 *[#1220] shares in home page on servers w/o specific query still show errors
 **Added SpecificQueryException for -853000 errors, indicating that specific query support is missing 
 
 *[#1248] collection listing not setting correct type
 **Added additional handling for collection types in CollectionAndDataObjectListAndSearchAO (contributed by iPlant)
 
==Features==

*[#984] iDrop web '2.0' redesign effort
**Added additional fields to the user profile, such as eduPerson attributes
**Added 'starring' support to the jargon-user-tagging package, managing the starring of files and collections
**Added UploadsService to jargon-data-utils to help manage an 'uploads' directory convention.  This provides a standard place to receive uploads from various clients.

 [#1107] support for large collection paging
 **Added totalRecords to IRODSDomainObject so that returned objects from queries can carry the total number of results
 **CollectionAndDataObjectListAndSearchAO results now include total record counts when available  
 **Adding pagination package to jargon-data-utils, providing a model that can be used to build smart paging controls into interfaces
 **Added a listDataObjectsAndCollectionsUnderPathProducingPagingAwareCollectionListing to CollectionAndDataObjectListAndSearchAO, which
 lists child data objects and collections, and provides addtional information on the paging status of the independent collections and data objects.
 
* [#511] add list shared data objs and permissions in coll and data obj list entry
**Added IRODSSharingService and related code in the jargon-user-tagging project.  The org.irods.jargon.usertagging.sharing
contains code to make shares a first-class object in Jargon, and works similar to the starred folder.  The top level
of a share is marked with a special AVU, and the service includes code to manage and query shares in various ways.
**Added a new DiscoveredServerPropertiesCache to the org.irods.jargon.core.connection package.  This is a dynamic cache of 
discovered properties of a connected iRODS server.  This helps address the challenge of discovering aspects of iRODS that are only
knowable by attempting an operation.  For example, if Jargon attmpts a specific query operation, and the required specific queries defined
in jargon-specquery.sh are not defined on the server, this can be remembered, so that jargon does not make repeated failed attampts at an opertion.
This is new and somewhat experimental, but should be a nice optimization for the future.  Well add a jargon.properties value that 
can be used to shut this capability off.

* [#1001] add case-insensitive tag queries