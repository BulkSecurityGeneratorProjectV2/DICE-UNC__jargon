#-------------------
# parallel transfer thread pooling behavior - work-in-progress
#-------------------

# set to true to use a transfer thread pool, or false to use the old algorithm
#  NOTE: the use of this pool is still experimental, use with caution!!!!!
transfer.use.pool=false
# minimum pool size for transfer threads
transfer.executor.pool.core.size=8
# maximum pool size for transfer threads, note that the transfer.max.parallel.threads value should be considered here
transfer.executor.pool.max.size=16
# timeout for threads in the transfer pool in millis
transfer.executor.pool.timeout=60000
# interim patch code to correct parallel transfer cap behavior
# length in mb
transfer.send.max.threads.threshold=33554432

#------------------
# i/o pipeline tuning - work in progress.  See wiki at https://code.renci.org/gf/project/jargon/wiki/?pagename=Networking+and+Optimization
#------------------

# buffer sized used in parallel get/put threads FIXME needs impl to replace constant, currently no effect
transfer.parallel.buffer.size=2048

#------------------
#max query results tuning 
#------------------

max.files.and.dirs.query.max=5000

#-----------------
# Misc transfer behaviors
#-----------------

#allow resource redirects (redirect transfers to resource server containing file)
transfer.allow.redirects=false
#compute a checksum for every file put to iRODS (does not do a verification/comparison)
transfer.compute.checksum=false
#compute a checksum for every file put/get to iRODS and verify
transfer.computeandvalidate.checksum=false
#send within-file status call-backs on transfers (slight performance penalty, but allows monitoring of file progress if 'true'
transfer.intra.file.callbacks=false
#do not allow parallel tranfsers at all - not yet implemented
transfer.use.parallel=true
#thread cap for parallel transfers, can ineract with pool settings above
transfer.max.parallel.threads=4
# UDP not currently supported
transfer.use.udp=false

